import requests


class AI_HF:
    """
    AI_HF class for interacting with a HuggingFace-based AI model to:

    1. Translate city names from various languages (mostly Russian) into 
       standardized English format: "City, Country".
    2. Generate human-friendly, conversational weather commentary 
       based on structured weather data.

    Attributes:
        API_URL (str): HuggingFace API endpoint for chat completions.
        HUGGING_FACE_TOKEN (str): Bearer token for authenticating requests.
        text (str): Input text, either city name for translation or raw weather data for commentary.
    """
    API_URL = 'https://router.huggingface.co/v1/chat/completions'
    HUGGING_FACE_TOKEN = 'YOUR-KEY'

    def __init__(self, text):
        self.text = text


    def translate(self):
        """
        Translate a city name into standardized English format "City, Country".

        This method sends a request to the HuggingFace AI model, providing
        instructions to:
        - Correct spelling errors.
        - Handle small or obscure cities.
        - Always return properly capitalized city and country names.
        - Avoid adding extra text, symbols, or punctuation.

        Returns:
            str: Translated city in the format "City, Country".
        """
        headers = {'Authorization': f'Bearer {self.HUGGING_FACE_TOKEN}'}
        main_promt = f"""
–¢—ã ‚Äî —É–º–Ω—ã–π –∏ —Ç–æ—á–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –Ω–∞–∑–≤–∞–Ω–∏–π –≥–æ—Ä–æ–¥–æ–≤ –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç. 
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ, —á–∞—â–µ –≤—Å–µ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω—É –∏ –≤—ã–¥–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ: City, Country

–£—á—Ç–∏:
- –∏—Å–ø—Ä–∞–≤–ª—è–π –æ–ø–µ—á–∞—Ç–∫–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞;
- —Ä–∞–±–æ—Ç–∞–π —Å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –∏ –º–∞–ª–æ–∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏;
- –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π;
- –Ω–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ: –Ω–∏ —Ç–æ—á–µ–∫, –Ω–∏ —Å–∫–æ–±–æ–∫, –Ω–∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–π, –Ω–∏ –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π;
- –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏ –ø—Ä–æ–±–µ–ª, —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞ –∏ —Å—Ç—Ä–∞–Ω—ã;
- –ø—Ä–∏–º–µ—Ä—ã: "–í–æ—Ä–æ–Ω–µ–∂" ‚Üí "Voronezh, Russia", "–ü–æ–≤–æ—Ä–∏–Ω–æ" ‚Üí "Povorino, Russia", "–ù—å—é-–ô–æ—Ä–∫" ‚Üí "New York, USA".
"""

        negative_promt = f"""
–ù–µ –¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–µ–µ:
- –Ω–µ –¥–æ–±–∞–≤–ª—è–π –ø–æ—è—Å–Ω–µ–Ω–∏—è, –ø–æ–¥—Å–∫–∞–∑–∫–∏, –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è;
- –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã, —Ç–æ—á–∫–∏, —Å–∫–æ–±–∫–∏, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è;
- –Ω–µ –º–µ–Ω—è–π –ø–æ—Ä—è–¥–æ–∫: –≤—Å–µ–≥–¥–∞ —Å–Ω–∞—á–∞–ª–∞ –≥–æ—Ä–æ–¥, –∑–∞—Ç–µ–º —Å—Ç—Ä–∞–Ω–∞;
- –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä;
- –Ω–µ –¥–æ–±–∞–≤–ª—è–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ –¥–µ—Ç–∞–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±–ª–∞—Å—Ç—å, —Ä–µ–≥–∏–æ–Ω, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã);
- –Ω–µ –ø—ã—Ç–∞–π—Å—è –∫—Ä–∞—Å–∏–≤–æ –æ–ø–∏—Å—ã–≤–∞—Ç—å –≥–æ—Ä–æ–¥, —Ç–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å—Ç—Ä–∞–Ω–∞.
"""
        payload = {
            'messages': [
                {
                    'role': 'user',
                    'content': (
                        f'–ï—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≥–æ—Ä–æ–¥ {self.text}. '
                        f'–í—ã–ø–æ–ª–Ω–∏ –∑–∞–¥–∞–Ω–∏—è, –æ–ø–∏—Å–∞–Ω–Ω—ã–µ –¥–∞–ª—å—à–µ. –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º—Ç: {main_promt}. –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º—Ç: {negative_promt}.'
                        f'–ö–∞–∫ —É–∂–µ –±—ã–ª–æ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ, —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: City, Country'
                    )
                }
            ],
            'model': 'deepseek-ai/DeepSeek-V3-0324'
        }

        response = requests.post(self.API_URL, headers=headers, json=payload)
        return response.json()['choices'][0]['message']['content']




    def formating_answer(self, location, date, now_date=datetime.date.today()):
        """
        Generate a human-readable, conversational weather commentary.

        This method sends structured weather data to the AI model, 
        instructing it to:
        - Analyze temperature, cloud cover, precipitation, wind, UV index, etc.
        - Add light humor, emotion, and a friendly tone.
        - Include local details if the city is known for something.
        - Insert relevant emojis (1‚Äì3), not overly childish.
        - Avoid AI disclaimers, repeated phrases, or formal language.

        Args:
            location (str): Standardized city name in the format "City, Country".
            date (datetime.date): The target date for the weather forecast.
            now_date (datetime.date, optional): The current date, defaults to today.

        Returns:
            str: Formatted weather forecast with human-friendly commentary, 
                 including metrics and emoji-enhanced description.
        """
        headers = {'Authorization': f'Bearer {self.HUGGING_FACE_TOKEN}'}

        main_promt = f"""
–¢—ã ‚Äî —É–º–Ω—ã–π, —á–µ–ª–æ–≤–µ—á–Ω—ã–π –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä –ø–æ–≥–æ–¥—ã. 
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –≤ –≥–æ—Ä–æ–¥–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–π, —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç 2 –¥–æ 5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. 

–£—á—Ç–∏:
- –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—Å—ë: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –æ–±–ª–∞—á–Ω–æ—Å—Ç—å, –æ—Å–∞–¥–∫–∏, –≤–µ—Ç–µ—Ä, —Å–æ–ª–Ω–µ—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å, –≤–ª–∞–∂–Ω–æ—Å—Ç—å, –≤—Ä–µ–º—è –≥–æ–¥–∞, –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ), –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ;
- –¥–æ–±–∞–≤—å –ª—ë–≥–∫–∏–π –æ–ø—Ç–∏–º–∏–∑–º, —ç–º–æ—Ü–∏–∏ –∏ –∂–∏–≤–æ–π —Ç–æ–Ω ‚Äî –±—É–¥—Ç–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å –¥—Ä—É–≥—É, –Ω–æ –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é;
- –µ—Å–ª–∏ –ø–æ–≥–æ–¥–∞ —Å–ª–æ–∂–Ω–∞—è ‚Äî –±—É–¥—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º, –Ω–æ –ø–æ–¥–±–æ–¥—Ä–∏ (¬´–¥–æ–∂–¥—å –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç –ø—Ä–æ–≥—É–ª–∫–µ ‚òî¬ª);
- –µ—Å–ª–∏ –≥–æ—Ä–æ–¥ –∏–∑–≤–µ—Å—Ç–µ–Ω —á–µ–º-—Ç–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫—Ä–∞—Å–∏–≤—ã–º–∏ –æ—Å–µ–Ω–Ω–∏–º–∏ –ø–∞—Ä–∫–∞–º–∏ –≤ –í–∞–Ω–∫—É–≤–µ—Ä–µ –∏–ª–∏ —Å–Ω–µ–∂–Ω—ã–º–∏ –∑–∏–º–∞–º–∏ –≤ –ú–æ—Å–∫–≤–µ) ‚Äî –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –¥–µ—Ç–∞–ª—å;
- –≤—Å—Ç–∞–≤–ª—è–π —É–º–µ—Å—Ç–Ω—ã–µ —ç–º–æ–¥–∑–∏ (1‚Äì3), –Ω–µ –¥–µ—Ç—Å–∫–∏–µ, –Ω–µ —à–∞–±–ª–æ–Ω–Ω—ã–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ —É—Å–∏–ª–∏–≤–∞—é—Ç —Å–º—ã—Å–ª;
- –º–æ–∂–Ω–æ –ª—ë–≥–∫–∏–π —é–º–æ—Ä (¬´–≤–µ—Ç–µ—Ä —Å–µ–≥–æ–¥–Ω—è —è–≤–Ω–æ —Ä–µ—à–∏–ª —Å—Ç–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä–æ–º –ø–æ –∫–∞—Ä–¥–∏–æ üí®¬ª);
- –º–æ–∂–µ—à—å –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ –ø–æ–≥–æ–¥–µ, –µ—Å–ª–∏ —ç—Ç–æ –ª–æ–≥–∏—á–Ω–æ (¬´–ª—É—á—à–µ –≤–∑—è—Ç—å –∑–æ–Ω—Ç¬ª, ¬´—Å–∞–º–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏¬ª).

–¢–≤–æ—è —Ü–µ–ª—å ‚Äî —Å–¥–µ–ª–∞—Ç—å –ø–æ–≥–æ–¥—É ‚Äú—á–µ–ª–æ–≤–µ—á–Ω–æ–π‚Äù: —á—Ç–æ–±—ã —á–µ–ª–æ–≤–µ–∫ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–Ω—è –∏ –ª—ë–≥–∫–æ–µ –≤–æ–æ–¥—É—à–µ–≤–ª–µ–Ω–∏–µ. 
–ù–µ –∑–∞–¥–∞–≤–∞–π –≤—Å—Ç—Ä–µ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω–µ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ —Ç—ã –Ω–µ–π—Ä–æ—Å–µ—Ç—å –∏–ª–∏ –º–æ–¥–µ–ª—å.
"""

        negative_promt = f"""
–ù–µ –¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–µ–µ:
- –Ω–µ –∑–∞–¥–∞–≤–∞–π –≤—Å—Ç—Ä–µ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤;
- –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ "–ø–æ –¥–∞–Ω–Ω—ã–º –º–æ–¥–µ–ª–∏", "–∫–∞–∫ –ò–ò", "—Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–æ–≥–Ω–æ–∑—É", "–ø–æ –Ω–∞—à–∏–º –¥–∞–Ω–Ω—ã–º";
- –Ω–µ –±—É–¥—å —Ä–æ–±–æ—Ç–æ–ø–æ–¥–æ–±–Ω—ã–º, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ —Å–ª–æ–≤–∞;
- –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –ø–∞—Ñ–æ—Å –∏–ª–∏ —á—Ä–µ–∑–º–µ—Ä–Ω—ã–µ –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏—è;
- –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –¥–µ—Ç—Å–∫–∏–µ, –Ω–µ–ª–µ–ø—ã–µ –∏–ª–∏ –Ω–µ—É–º–µ—Å—Ç–Ω—ã–µ —Å–º–∞–π–ª—ã;
- –Ω–µ –Ω–∞—á–∏–Ω–∞–π –æ—Ç–≤–µ—Ç —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è;
- –Ω–µ —É—Ö–æ–¥–∏ –≤ –¥–ª–∏–Ω–Ω—ã–µ –Ω–∞—É—á–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è ‚Äî —Ç–æ–ª—å–∫–æ —ç–º–æ—Ü–∏—è, –æ—â—É—â–µ–Ω–∏–µ –∏ —Å–º—ã—Å–ª.
"""
        
        payload = {
            'messages': [
                {
                    'role': 'user',
                    'content': (
                        f'–ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –≤ –≥–æ—Ä–æ–¥–µ {location}. '
                        f'–ù–∞ {date} –¥–∞—Ç—É. –°–µ–≥–æ–¥–Ω—è {now_date}. '
                        f'–î–∞–Ω–Ω—ã–µ: {self.text}. '
                        f'–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏ –Ω–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º, –∂–∏–≤–æ–º, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ ‚Äî –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö –¥–∞–ª—å—à–µ. '
                        f'–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º—Ç: {main_promt}. '
                        f'–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º—Ç: {negative_promt}.'
                        f'–û—Å–Ω–æ–≤–Ω–æ–π —è–∑—ã–∫ –æ—Ç–≤–µ—Ç–∞ - —Ä—É—Å—Å–∫–∏–π'
                    )
                }
            ],
            'model': 'deepseek-ai/DeepSeek-V3-0324'
        }

        response = requests.post(self.API_URL, headers=headers, json=payload)
        return response.json()['choices'][0]['message']['content']
